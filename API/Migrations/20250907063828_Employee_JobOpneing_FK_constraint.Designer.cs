// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AssignmentDbContext))]
    [Migration("20250907063828_Employee_JobOpneing_FK_constraint")]
    partial class Employee_JobOpneing_FK_constraint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.General.Candidate", b =>
                {
                    b.Property<int>("CandidateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CandidateID"));

                    b.Property<int>("AppliedJobOpeningId")
                        .HasColumnType("int");

                    b.Property<string>("CVPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrentCTC")
                        .HasColumnType("int");

                    b.Property<string>("CurrentCompany")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ExpectedCTC")
                        .HasColumnType("int");

                    b.Property<decimal>("Experience")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CandidateID");

                    b.HasIndex("AppliedJobOpeningId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("API.Entities.General.CandidateWiseInterview", b =>
                {
                    b.Property<int>("InterviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InterviewID"));

                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InterviewDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InterviewDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("InterviewRoundID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("InterviewTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("MeetingLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("InterviewID");

                    b.HasIndex("CandidateID");

                    b.HasIndex("InterviewRoundID");

                    b.ToTable("CandidateWiseInterviews");
                });

            modelBuilder.Entity("API.Entities.General.CandidateWiseSkill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.HasIndex("SkillID");

                    b.ToTable("CandidateWiseSkills");
                });

            modelBuilder.Entity("API.Entities.General.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("RoleID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("API.Entities.General.InterviewRound", b =>
                {
                    b.Property<int>("InterviewRoundID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InterviewRoundID"));

                    b.Property<string>("InterviewDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InterviewMode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPanel")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("JobOpeningID")
                        .HasColumnType("int");

                    b.HasKey("InterviewRoundID");

                    b.HasIndex("JobOpeningID");

                    b.ToTable("InterviewRounds");
                });

            modelBuilder.Entity("API.Entities.General.InterviewWiseAuthorityFeedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("InterviewID")
                        .HasColumnType("int");

                    b.Property<int>("InterviewerID")
                        .HasColumnType("int");

                    b.Property<int>("Marks")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InterviewID");

                    b.HasIndex("InterviewerID");

                    b.ToTable("InterviewWiseAuthorityFeedbacks");
                });

            modelBuilder.Entity("API.Entities.General.JobOpening", b =>
                {
                    b.Property<int>("JobOpeningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JobOpeningID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("LastDateOFRegistration")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NoOfOpenings")
                        .HasColumnType("int");

                    b.Property<string>("RequiredMinExperience")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("JobOpeningID");

                    b.HasIndex("CreatedBy");

                    b.ToTable("JobOpenings");
                });

            modelBuilder.Entity("API.Entities.General.JobOpeningWiseSkill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Importance")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobOpeningID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("JobOpeningID");

                    b.HasIndex("SkillID");

                    b.ToTable("JobOpeningWiseSkills");
                });

            modelBuilder.Entity("API.Entities.General.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("API.Entities.General.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SkillID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SkillTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SkillID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("API.Entities.General.Candidate", b =>
                {
                    b.HasOne("API.Entities.General.JobOpening", "AppliedJobOpening")
                        .WithMany("Candidates")
                        .HasForeignKey("AppliedJobOpeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppliedJobOpening");
                });

            modelBuilder.Entity("API.Entities.General.CandidateWiseInterview", b =>
                {
                    b.HasOne("API.Entities.General.Candidate", "Candidate")
                        .WithMany("CandidateWiseInterviews")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.General.InterviewRound", "InterviewRound")
                        .WithMany("CandidateWiseInterviews")
                        .HasForeignKey("InterviewRoundID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("InterviewRound");
                });

            modelBuilder.Entity("API.Entities.General.CandidateWiseSkill", b =>
                {
                    b.HasOne("API.Entities.General.Candidate", "Candidate")
                        .WithMany("CandidateWiseSkills")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.General.Skill", "Skill")
                        .WithMany("CandidateWiseSkills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("API.Entities.General.Employee", b =>
                {
                    b.HasOne("API.Entities.General.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API.Entities.General.InterviewRound", b =>
                {
                    b.HasOne("API.Entities.General.JobOpening", "JobOpening")
                        .WithMany("InterviewRounds")
                        .HasForeignKey("JobOpeningID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobOpening");
                });

            modelBuilder.Entity("API.Entities.General.InterviewWiseAuthorityFeedback", b =>
                {
                    b.HasOne("API.Entities.General.CandidateWiseInterview", "CandidateWiseInterview")
                        .WithMany("Feedbacks")
                        .HasForeignKey("InterviewID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.General.Employee", "Employee")
                        .WithMany("Feedbacks")
                        .HasForeignKey("InterviewerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CandidateWiseInterview");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("API.Entities.General.JobOpening", b =>
                {
                    b.HasOne("API.Entities.General.Employee", "CreatedByEmployee")
                        .WithMany("JobOpenings")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");
                });

            modelBuilder.Entity("API.Entities.General.JobOpeningWiseSkill", b =>
                {
                    b.HasOne("API.Entities.General.JobOpening", "JobOpening")
                        .WithMany("JobOpeningWiseSkills")
                        .HasForeignKey("JobOpeningID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.General.Skill", "Skill")
                        .WithMany("JobOpeningWiseSkills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobOpening");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("API.Entities.General.Candidate", b =>
                {
                    b.Navigation("CandidateWiseInterviews");

                    b.Navigation("CandidateWiseSkills");
                });

            modelBuilder.Entity("API.Entities.General.CandidateWiseInterview", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("API.Entities.General.Employee", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("JobOpenings");
                });

            modelBuilder.Entity("API.Entities.General.InterviewRound", b =>
                {
                    b.Navigation("CandidateWiseInterviews");
                });

            modelBuilder.Entity("API.Entities.General.JobOpening", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("InterviewRounds");

                    b.Navigation("JobOpeningWiseSkills");
                });

            modelBuilder.Entity("API.Entities.General.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("API.Entities.General.Skill", b =>
                {
                    b.Navigation("CandidateWiseSkills");

                    b.Navigation("JobOpeningWiseSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
